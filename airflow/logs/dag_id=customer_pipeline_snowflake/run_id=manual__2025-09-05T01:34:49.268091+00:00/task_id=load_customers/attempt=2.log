{"timestamp":"2025-09-05T01:41:45.432411","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-09-05T01:41:45.434084","level":"info","event":"Filling up the DagBag from /Users/user/airflow/dags/customer_pipeline_dag.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-09-05T01:41:47.101395Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-05T01:41:47.102134Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-05T01:41:47.102349Z","level":"info","event":"Current task name:load_customers","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-05T01:41:47.102610Z","level":"info","event":"Dag name:customer_pipeline_snowflake","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-05T01:41:47.102805Z","level":"info","event":"Loading transformed customers:","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-05T01:41:47.161212Z","level":"info","event":"  CUSTOMER_ID FIRST_NAME  ... COUNTRY         full_name","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-05T01:41:47.161524Z","level":"info","event":"0     CUST002    Timothy  ...      GN     Timothy Dixon","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-05T01:41:47.161732Z","level":"info","event":"1     CUST003      Aimee  ...      AM         Aimee Lee","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-05T01:41:47.161895Z","level":"info","event":"2     CUST004    Douglas  ...      SO  Douglas Trujillo","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-05T01:41:47.162054Z","level":"info","event":"3     CUST005    Michael  ...      NE     Michael Jones","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-05T01:41:47.162214Z","level":"info","event":"4     CUST006      Wyatt  ...      SL      Wyatt Rivera","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-05T01:41:47.162493Z","level":"info","event":"","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-05T01:41:47.162815Z","level":"info","event":"[5 rows x 7 columns]","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-05T01:41:47.163012","level":"info","event":"Done. Returned value was: None","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
{"timestamp":"2025-09-05T01:41:47.347421Z","level":"info","event":"Task instance in success state","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-05T01:41:47.347740Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.RUNNING","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-05T01:41:47.349015Z","level":"info","event":"Task operator:<Task(PythonOperator): load_customers>","chan":"stdout","logger":"task"}
